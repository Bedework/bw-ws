<?xml version="1.0"?>

<!-- This is the main build file for the XML schemas module.

     Authors: Mike Douglass   douglm  rpi.edu
-->

<project name="xmlschema" default="deploy">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

  <property environment="env"/>
  <dirname property="project.home" file="${ant.file}"/>
  
  <property file="${project.home}/build.properties" />

  <property name="bedework.home"
            location="${project.home}/../bedework" />

  <property name="build.dir" location="${bedework.home}/build"/>

  <import file="${build.dir}/buildTools/deftasks.xml"/>

  <deftasks/>

  <projectDefs name="${org.bedework.package.name}"
               version="${org.bedework.xmlschema.version}" 
               deployment-name="xmlschema"
  />

  <import file="${build.dir}/loadDeployConfig.xml"/>
  <import file="${build.dir}/buildTools/wsimport.xml"/>
  <import file="${build.dir}/buildTools/xjc.xml"/>

  <!-- =================================================================
       init:
       ================================================================= -->

  <target name="init">
    <projectInit/>
    
    <property name="org.bedework.project.bedework"
              location="${project.home}/../bedework" />

    <loadDeployConfig/>

  	<property name="org.bedework.options.file"
  	          value="${org.bedework.config.options}" />

    <property name="org.bedework.schemas.base"
              location="${project.home}/schemas" />

    <property name="org.bedework.appleServer.base"
              location="${project.home}/appleServer" />

    <property name="org.bedework.calws-soap.base"
              location="${project.home}/calws-soap" />

    <property name="org.bedework.exchangews.base"
              location="${project.home}/exchangews" />

    <property name="org.bedework.synchws.base"
              location="${project.home}/synchws" />

    <property name="org.bedework.icalendar.base"
              location="${project.home}/icalendar" />

    <property name="org.bedework.category.base"
              location="${project.home}/category" />

    <property name="org.bedework.caldav.base"
              location="${project.home}/caldav" />

    <property name="org.bedework.catdav.base"
              location="${project.home}/catdav" />

    <property name="org.bedework.tzsvc.base"
              location="${project.home}/timezones" />

    <property name="org.bedework.vcard.base"
              location="${project.home}/vcard" />

    <property name="applesvschema.jar"
              location="${dist.home}/${org.bedework.module.applesvschema.jar}-${project.version}.jar" />

    <property name="exchangews.jar"
              location="${dist.home}/${org.bedework.module.exchangewsschema.jar}-${project.version}.jar" />

    <property name="synchws.jar"
              location="${dist.home}/${org.bedework.module.synchwsschema.jar}-${project.version}.jar" />

    <property name="tzsvc.jar"
              location="${dist.home}/${org.bedework.module.tzschema.jar}-${project.version}.jar" />

    <property name="calws-soap.jar"
              location="${dist.home}/${org.bedework.module.calws-soapschema.jar}-${project.version}.jar" />

    <property name="icalendar.jar"
              location="${dist.home}/${org.bedework.module.icalschema.jar}-${project.version}.jar" />

    <property name="vcard.jar"
              location="${dist.home}/${org.bedework.module.vcardschema.jar}-${project.version}.jar" />

    <property name="category.jar"
              location="${dist.home}/${org.bedework.module.catschema.jar}-${project.version}.jar" />

    <property name="caldavschema.jar"
              location="${dist.home}/${org.bedework.module.caldavschema.jar}-${project.version}.jar" />

    <property name="catdavschema.jar"
              location="${dist.home}/${org.bedework.module.catdavschema.jar}-${project.version}.jar" />
    
    <property name="calws-soap.wsdllocation"
              value="${bedework-options.org.bedework.app.Usercaldav.calSoapWsWSDLURI}" />
    
    <property name="exchange.wsdllocation"
              value="${bedework-options.org.bedework.app.Synch.exchangeWSDLURI}" />
    
    <property name="synch.wsdllocation"
              value="${bedework-options.org.bedework.app.Synch.remoteWSDLURI}" />
    
    <!-- Filesets used for dependencies -->
    <fileset id="org.bedework.schemas.files"
             dir="${org.bedework.schemas.base}" />
  </target>
  
  <target name="deploy-init" depends="init">
  </target>

  <!-- ===================== build-source Target ===============================
     This target builds jar files ready for the deploy target.
     =================================================================== -->

  <target name="build-source" >    
    <!-- Exchange - web service -->
    <wsimport wsdl="${org.bedework.exchangews.base}/Services.wsdl"
              wsdllocation="${exchange.wsdllocation}"
              module-base="${org.bedework.exchangews.base}/gensrc"
              jar-file="${exchangews.jar}"
              bindingsdir="${org.bedework.exchangews.base}/wsdlbindings"
    />

    <!-- Synch - web service -->
    <wsimport wsdl="${org.bedework.synchws.base}/wssvc.wsdl"
              wsdllocation="${synch.wsdllocation}"
              module-base="${org.bedework.synchws.base}/gensrc"
              jar-file="${synchws.jar}"
              bindingsdir="${org.bedework.synchws.base}/wsdlbindings"
              dependencies="org.bedework.schemas.files"
    />

    <!-- Apple Server -->
    <xjc schema="${org.bedework.schemas.base}/appleServer/appleServer.xsd"
         module-base="${org.bedework.appleServer.base}/gensrc"
         jar-file="${applesvschema.jar}"
         bindingsdir="${project.home}/xjcbindings"
         dependencies="org.bedework.schemas.files"
    />

    <!-- calws-soap - web service -->
    <echo message="wsdllocation=${calws-soap.wsdllocation}" />
    <wsimport wsdl="${org.bedework.calws-soap.base}/wssvc.wsdl"
              wsdllocation="${calws-soap.wsdllocation}"
              module-base="${org.bedework.calws-soap.base}/gensrc"
              jar-file="${calws-soap.jar}"
              bindingsdir="${org.bedework.calws-soap.base}/wsdlbindings"
              dependencies="org.bedework.schemas.files"
    />

    <!-- Timezones - XML data -->
    <xjc schema="${org.bedework.schemas.base}/tzsvr/tzservice.xsd"
         module-base="${org.bedework.tzsvc.base}/gensrc"
         jar-file="${tzsvc.jar}"
         bindingsdir="${project.home}/xjcbindings"
         dependencies="org.bedework.schemas.files"
    />

    <!-- icalendar -->
    <xjc schema="${org.bedework.schemas.base}/icalendar/iCalendar.xsd"
         module-base="${org.bedework.icalendar.base}/gensrc"
         jar-file="${icalendar.jar}"
         bindingsdir="${project.home}/xjcbindings"
    />

    <!-- category -->
    <xjc schema="${org.bedework.schemas.base}/category/category.xsd"
         module-base="${org.bedework.category.base}/gensrc"
         jar-file="${category.jar}"
         bindingsdir="${project.home}/xjcbindings"
    />

    <!-- caldav -->
    <xjc schema="${org.bedework.schemas.base}/caldav/caldav.xsd"
         module-base="${org.bedework.caldav.base}/gensrc"
         jar-file="${caldavschema.jar}"
         bindingsdir="${project.home}/xjcbindings"
    />

    <!-- catdav -->
    <xjc schema="${org.bedework.schemas.base}/catdav/catdav.xsd"
         module-base="${org.bedework.catdav.base}/gensrc"
         jar-file="${catdavschema.jar}"
         bindingsdir="${project.home}/xjcbindings"
    />

    <!-- vcard -->
    <xjc schema="${org.bedework.schemas.base}/vcard/vcard.xsd"
         module-base="${org.bedework.vcard.base}/gensrc"
         jar-file="${vcard.jar}"
         bindingsdir="${project.home}/xjcbindings"
    />
    
    <build-jar-stats />
  </target>

  <!-- ===================== deploy Target ===============================
     Deploy if an application server is defined.
     =================================================================== -->

  <target name="deploy" depends="deploy-init,build"
          description="Deploy generated files">
    <!-- Copy the schemas in first -->
    <copy todir="${org.bedework.wsdl.deploy.dir}/schemas" overwrite="yes">
      <fileset dir="${org.bedework.schemas.base}"/>
    </copy>
    
    <if>
      <isset property="bedework-options.org.bedework.app.Pubcaldav.synchWsURI" />
      <then>
        <!-- Exchange wsdl -->
        <debugMsg message="Copy the wsdl to ${org.bedework.exchange.wsdl.deploy.dir}"/>
    
        <copy todir="${org.bedework.exchange.wsdl.deploy.dir}" overwrite="yes">
          <fileset dir="${org.bedework.exchangews.base}"
                   includes="*.xsd,*.wsdl" />
          <filterset>
            <filter token="SERVICE-URL" 
                     value="${org.bedework.exchange.ws.url}"/>
          </filterset>
        </copy>

        <!-- Exchange synch wsdl -->
        <debugMsg message="Copy the wsdl to ${org.bedework.synch.wsdl.deploy.dir}"/>
    
        <copy todir="${org.bedework.synch.wsdl.deploy.dir}" overwrite="yes">
          <fileset dir="${org.bedework.synchws.base}"
                   includes="*.xsd,*.wsdl" />
          <filterset>
            <filter token="SERVICE-URL"
                    value="${org.bedework.synch.service}"/>
          </filterset>
        </copy>
      </then>
    </if>

    <!-- CalWs wsdl -->
    <debugMsg message="Copy the wsdl to ${org.bedework.calws.wsdl.deploy.dir}"/>

    <copy todir="${org.bedework.calws.wsdl.deploy.dir}" overwrite="yes">
      <fileset dir="${org.bedework.calws-soap.base}"
               includes="*.xsd,*.wsdl" />
      <filterset>
        <filter token="SERVICE-URL" 
                value="${org.bedework.calws-soap.service}"/>
      </filterset>
    </copy>
  </target>

<!-- ==================== Javadoc Target ===============================
     The "javadoc" target creates Javadoc API documentation for the Java
     classes included in your application.  Normally, this is only required
     when preparing a distribution release, but is available as a separate
     target in case the developer wants to create Javadocs independently.
     =================================================================== -->

  <target name="javadoc" depends="init"
          description="Create Javadoc API documentation">
    <property name="destdir" location="${dist.home}/docs/api"/>
    <mkdir dir="${destdir}"/>

    <javadoc sourcepath="${org.bedework.module.common.base}/src:${org.bedework.module.service.base}/src:${org.bedework.module.server.base}/src:"
           classpathref="compile.classpath"
                destdir="${destdir}"
           packagenames="org.bedework.*,
                         edu.rpi.*"
                 access="public"
                 author="true"
                version="true"
          breakiterator="yes"
            windowtitle="${project.name} ${project.version} API Documentation">
      <doctitle><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></doctitle>
      <header><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></header>
      <link href="../../access/api" />
      <link href="../../calendarapi/api" />
      <link href="../../davutil/api" />
      <link href="../../rpiutil/api" />
      <link href="../../webdav/api" />
      <link href="${env.JAVA_HOME}/docs/api" />
    </javadoc>
  </target>
</project>
