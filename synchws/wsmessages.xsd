<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE schema>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
        xmlns:tns="http://www.bedework.org/synch/wsmessages" 
        xmlns:xcal="urn:ietf:params:xml:ns:icalendar-2.0"
        xmlns:xrd="http://docs.oasis-open.org/ns/xri/xrd-1.0"
        xmlns:cws="http://docs.oasis-open.org/ns/wscal/calws-soap"
        targetNamespace="http://www.bedework.org/synch/wsmessages" 
        elementFormDefault="qualified">
  <import schemaLocation="../calws-soap/wsmessages.xsd" 
          namespace="http://docs.oasis-open.org/ns/wscal/calws-soap" />
        
  <import schemaLocation="../schemas/icalendar/iCalendar.xsd" 
          namespace="urn:ietf:params:xml:ns:icalendar-2.0" />
        
  <import schemaLocation="../schemas/xrd/xrd-1.0-os.xsd" 
          namespace="http://docs.oasis-open.org/ns/xri/xrd-1.0" />
          
  <include schemaLocation="wserrors.xsd" />

  <!-- Schema for synch processor. -->
  
  <simpleType name="SynchDirectionType">
    <annotation>
      <documentation xml:lang="en">
        Used to define which way we are synching
           both  both ways - server tries to resolve conflicts
           both...Master - Named service wins in conflicts.
      </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="BToA" />
      <enumeration value="AToB" />
      <enumeration value="bothWays" />
    </restriction>
  </simpleType>
  
  <simpleType name="SynchMasterType">
    <annotation>
      <documentation xml:lang="en">
        Used to define how we resolve conflicts for 2 way synch
        None - server does it's best
        local - A overrides B
        remote - B overrides A
      </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="none" />
      <enumeration value="A" />
      <enumeration value="B" />
    </restriction>
  </simpleType>
  
  <complexType name="SynchIdTokenType">
    <annotation>
      <documentation xml:lang="en">
           Id and token for a synch operation.
      </documentation>
    </annotation>
    <sequence>
      <element name="principalHref" type="string" />
      <element name="subscribeUrl" type="string" />
      <element name="synchToken" type="string" />
    </sequence>
  </complexType>

  <element name="synchIdToken" type="tns:SynchIdTokenType" />
  
  <complexType name="BaseSynchRequestType">
    <annotation>
      <documentation xml:lang="en">
           Requests have this as the base type.
      </documentation>
    </annotation>
  </complexType>
  
  <!-- *********************************************************************
       to syncher
       subscribe: set up a new subscription for a principal to a calendar
       unsubscribe: remove a new subscription for a principal to a calendar
       ********************************************************************* -->
  
  <complexType name="SynchPropertyType">
    <annotation>
      <documentation xml:lang="en">
           A single property consisting of a name and value
      </documentation>
    </annotation>
    <sequence >
      <element name="name" type="string" />
      <element name="value" type="string" />
    </sequence>
  </complexType>
  
  <complexType name="ArrayOfSynchProperties">
    <sequence>
      <element name="property" type="tns:SynchPropertyType" 
               minOccurs="0" maxOccurs="unbounded" />
    </sequence>
  </complexType>  
  
  <complexType name="ConnectorInfoType">
    <annotation>
      <documentation xml:lang="en">
           The name of the connector and proeprties required to make a connection
      </documentation>
    </annotation>
    <sequence >
      <element name="connectorId" type="string" />
      <element name="properties" type="tns:ArrayOfSynchProperties" />
    </sequence>
  </complexType>
  
  <complexType name="SubscribeRequestType">
    <annotation>
      <documentation xml:lang="en">
           Message from a service requesting new subscription
           calendar to 'remote'.
           token
                 Sent in initial startup request
           localProperties
                 Set of properties for the local end
           remoteProperties
                 Set of properties for the remote end
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType">
        <sequence >
          <element name="token" type="string" />
          <element name="direction" type="tns:SynchDirectionType" />
          <element name="master" type="tns:SynchMasterType" />
          <element name="endAConnector" type="tns:ConnectorInfoType" />
          <element name="endBConnector" type="tns:ConnectorInfoType" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="subscribe" type="tns:SubscribeRequestType" />
  
  <complexType name="SubscribeResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message from service requesting new subscription.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="cws:BaseResponseType">
        <sequence >
          <element name="subscriptionId" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="subscribeResponse" type="tns:SubscribeResponseType" />
  
  <complexType name="UnsubscribeRequestType">
    <annotation>
      <documentation xml:lang="en">
           Message unsubscribing.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType">
        <sequence >
          <element name="subscription-id" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="unsubscribe" type="tns:UnsubscribeRequestType" />
  
  <complexType name="UnsubscribeResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message requesting unsubscription.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="cws:BaseResponseType">
      </extension>
    </complexContent>
  </complexType>

  <element name="unsubscribe-response" type="tns:UnsubscribeResponseType" />
  
  <!-- *********************************************************************
       Syncher to Remote system 
       start-service-notification; sent to initialise the service
       keep-alive-notification; sent to say synch engine is still with us
       get-sycnch-info: return info used to synch
       fetch: fetch one or more calendar items
       add: add a new calendar item
       update: update a calendar item
       delete: delete a calendar item
       ********************************************************************* -->
  
  <complexType name="StartServiceNotificationType">
    <annotation>
      <documentation xml:lang="en">
           (Re)initialize the service
           subscribe-url: callback url for notifications and subscribe requests
           id and (encrypted) password - may be required by prior arrangement
      </documentation>
    </annotation>
    <sequence>
      <element name="connectorId" type="string" />
      <element name="subscribeUrl" type="string" />
      <element name="id" type="string" minOccurs="0" />
      <element name="pw" type="string" minOccurs="0" />
    </sequence>
  </complexType>
  
  <element name="startServiceNotification" 
           type="tns:StartServiceNotificationType" />
  
  <complexType name="StartServiceResponseType">
    <annotation>
      <documentation xml:lang="en">
           Respond to the ping
           token: from service
           status: OK
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="cws:BaseResponseType">
        <sequence>
          <element name="token" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="startServiceResponse" type="tns:StartServiceResponseType" />
  
  <complexType name="KeepAliveNotificationType">
    <annotation>
      <documentation xml:lang="en">
           Ping the service
           subscribe-url: callback url for notifications and subscribe requests
           token: token as provided at startup
      </documentation>
    </annotation>
    <sequence>
      <element name="subscribeUrl" type="string" />
      <element name="token" type="string" />
    </sequence>
  </complexType>
  
  <element name="keepAliveNotification" 
           type="tns:KeepAliveNotificationType" />
  
  <complexType name="KeepAliveResponseType">
    <annotation>
      <documentation xml:lang="en">
         Response to ping message.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="cws:BaseResponseType">
      </extension>
    </complexContent>
  </complexType>

  <element name="keepAliveResponse" type="tns:KeepAliveResponseType" />
  
  <!-- ============================ synch-info ============================= -->
  
  <complexType name="GetSynchInfoType">
    <annotation>
      <documentation xml:lang="en">
           Message to remote service requesting synchronization info.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType">
        <sequence>
          <element name="calendarHref" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="get-sycnch-info" type="tns:GetSynchInfoType" />
  
  <complexType name="SynchInfoType">
    <sequence>
      <element name="uid" type="string" />
      <element name="exchange-lastmod" type="string" />
    </sequence>
  </complexType>
  
  <complexType name="SynchInfoResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to remote service requesting synchronization info.
      </documentation>
    </annotation>
    <sequence>
      <element name="calendarHref" type="string" />
      <element name="synchInfoResponses">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" name="synch-info" 
                     type="tns:SynchInfoType" />
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>
  
  <element name="synch-info-response" type="tns:SynchInfoResponseType" />
</schema>
