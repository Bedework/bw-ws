<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE schema [
  <!ENTITY ncname "\i\c*">
  <!ENTITY qname  "(&ncname;:)?&ncname;">
  <!ENTITY aname  "@&qname;">
  <!ENTITY pos    "\[\d+\]">
  <!ENTITY attr   "\[&aname;='(.)*'\]|\[&aname;=&quot;(.)*&quot;\]">
  <!ENTITY valueq "\[(&qname;|\.)=&quot;(.)*&quot;\]">
  <!ENTITY value  "\[(&qname;|\.)='(.)*'\]|&valueq;">
  <!ENTITY cond   "&attr;|&value;|&pos;">
  <!ENTITY step   "(&qname;|\*)(&cond;)*">
  <!ENTITY piq    "processing-instruction\((&quot;&ncname;&quot;)\)">
  <!ENTITY pi     "processing-instruction\(('&ncname;')?\)|&piq;">
  <!ENTITY id     "id\(('&ncname;')?\)|id\((&quot;&ncname;&quot;)?\)">
  <!ENTITY com    "comment\(\)">
  <!ENTITY text   "text\(\)">
  <!ENTITY nspa   "namespace::&ncname;">
  <!ENTITY cnodes "(&text;(&pos;)?)|(&com;(&pos;)?)|((&pi;)(&pos;)?)">
  <!ENTITY child  "&cnodes;|&step;">
  <!ENTITY last   "(&child;|&aname;|&nspa;)">
 ]>
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
        xmlns:tns="http://docs.oasis-open.org/ns/wscal/calws-soap" 
        xmlns:xcal="urn:ietf:params:xml:ns:icalendar-2.0"
        xmlns:cdav="urn:ietf:params:xml:ns:caldav"
        xmlns:xrd="http://docs.oasis-open.org/ns/xri/xrd-1.0"
        targetNamespace="http://docs.oasis-open.org/ns/wscal/calws-soap" 
        elementFormDefault="qualified">
    
  <import schemaLocation="../schemas/icalendar/iCalendar.xsd" 
          namespace="urn:ietf:params:xml:ns:icalendar-2.0" />
        
  <import schemaLocation="../schemas/caldav/caldav.xsd" 
          namespace="urn:ietf:params:xml:ns:caldav" />
        
  <import schemaLocation="../schemas/xrd/xrd-1.0-os.xsd" 
          namespace="http://docs.oasis-open.org/ns/xri/xrd-1.0" />

  <!-- Schema for CalWS SOAP messages. -->
 
  <simpleType name="StatusType">
    <restriction base="string">
      <enumeration value="OK" />
      <enumeration value="No Access" />
      <enumeration value="Service Stopped" />
      <enumeration value="Error" />
    </restriction>
  </simpleType>

  <complexType name="ErrorCodeType" >
  </complexType>

  <element name="error" type="tns:ErrorCodeType" />
  
  <complexType name="ErrorResponseType">
    <annotation>
      <documentation xml:lang="en">
           Message from service indicating an error.
      </documentation>
    </annotation>
    <sequence >
      <element ref="tns:error" />
      <element name="description" type="string" minOccurs="0" />
    </sequence>
  </complexType>
  
  <!-- Error codes -->
  <element name="targetExists" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="targetDoesNotExist" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="targetNotEntity" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="notCalendarData" type="tns:ErrorCodeType" 
              substitutionGroup="tns:error" />
  <element name="invalidCalendarData" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="invalidCalendarObjectResource" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="unsupportedCalendarComponent" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="invalidCalendarCollectionLocation" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="exceedsMaxResourceSize" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="beforeMinDateTime" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="afterMaxDateTime" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="tooManyInstances" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />
  <element name="tooManyAttendeesPerInstance" type="tns:ErrorCodeType"
              substitutionGroup="tns:error" />

  <complexType name="InvalidFilterType" >
    <complexContent mixed="false">
      <extension base="tns:ErrorCodeType">
        <sequence> 
          <element name="detail" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="invalidFilter" type="tns:InvalidFilterType"
              substitutionGroup="tns:error" />

  <complexType name="UidConflictType" >
    <complexContent mixed="false">
      <extension base="tns:ErrorCodeType">
        <sequence> 
          <element name="href" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="uidConflict" type="tns:UidConflictType"
              substitutionGroup="tns:error" />
  
  <simpleType name="DepthType">
    <restriction base="string">
    </restriction>
  </simpleType>
  
  <element name="depth" type="tns:DepthType" />

  <complexType name="BaseRequestType">
    <annotation>
      <documentation xml:lang="en">
           Requests have this as the base type.
      </documentation>
    </annotation>
    <sequence>
      <element name="href" type="string" />
    </sequence>
  </complexType>
  
  <complexType name="BaseResponseType">
    <annotation>
      <documentation xml:lang="en">
           Responses have this as the base type.
      </documentation>
    </annotation>
    <sequence>
      <element name="status" type="tns:StatusType" />
      <element name="message" type="string" minOccurs="0" />
      <element name="errorResponse" type="tns:ErrorResponseType" minOccurs="0" />
    </sequence>
  </complexType>

  <complexType name="UTCTimeRangeType">
    <sequence>
      <element name="start" type="xcal:UTCDateTimeType" minOccurs="0" />
      <element name="end" type="xcal:UTCDateTimeType" minOccurs="0" />
    </sequence>
  </complexType>

  <!-- =========================== getProperties =========================== -->
  
  <complexType name="GetPropertiesType">
    <annotation>
      <documentation xml:lang="en">
           Fetch the XRD object for the targeted resource. The target may be
           the system itself ("/"), a principal, a collection resource or an entity.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType">
      </extension>
    </complexContent>
  </complexType>
  
  <element name="getProperties" 
           type="tns:GetPropertiesType" />
  
  <complexType name="GetPropertiesResponseType">
    <annotation>
      <documentation xml:lang="en">
           Respond to the get-properties request
      </documentation>
    </annotation>
    <sequence>
      <element ref="xrd:XRD" />
    </sequence>
  </complexType>

  <element name="getPropertiesResponse" type="tns:GetPropertiesResponseType" />
  
  <!-- 
  <complexType name="SupportedCalendarComponentSetType">
    <annotation>
      <documentation xml:lang="en">
           Type returned in an XRD object to define the allowable component types 
           within a collection or supported by the system.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="xrd:XRDAnyType">
        <sequence>
          <element ref="xcal:baseComponent" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="supported-calendar-component-set" 
           type="tns:SupportedCalendarComponentSetType"
           substitutionGroup="xrd:anyElement"/>
 -->
  <complexType name="SupportedCalendarComponentSetType">
    <annotation>
      <documentation xml:lang="en">
           Type returned in an XRD object to define the allowable component types 
           within a collection or supported by the system.
      </documentation>
    </annotation>
        <sequence>
          <element ref="xcal:baseComponent" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
  </complexType>

  <element name="supported-calendar-component-set" 
           type="tns:SupportedCalendarComponentSetType" />
           
  <!-- =========================== freebusyQuery =========================== -->
  
  <complexType name="FreebusyReportType">
    <annotation>
      <documentation xml:lang="en">
           Request a freebusy report on the targeted resource. This is NOT a
           scheduling freebusy request which incorporates information such as 
           availability etc, but a simple report of the state of the targeted
           collection(s)
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType">
        <sequence>
          <element name="time-range" type="tns:UTCTimeRangeType"
                   minOccurs="0" />
          <element name="depth" type="int" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="freebusyReport" 
           type="tns:FreebusyReportType" />
  
  <complexType name="FreebusyReportResponseType">
    <annotation>
      <documentation xml:lang="en">
           Respond to the freebusy request.
           Returned icalendar data will be an icalendar entity containing a 
           vfreebusy object. Note that the time period returned may not be as
           requested. The server is at liberty to extend or truncate the period.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseResponseType">
        <sequence>
          <element ref="xcal:icalendar" minOccurs="0" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="freebusyReportResponse" type="tns:FreebusyReportResponseType" />

  <!-- ======================== calendar-query ============================= -->
  
  <complexType name="AllpropType">
    <annotation>
      <documentation xml:lang="en">
        Used in a calendar query to specify that all properties be returned.
        What "all" really means is defined in the specification.
      </documentation>
    </annotation>
  </complexType>
  
  <element name="allprop" type="tns:AllpropType" />

<!--   
  <complexType name="PropnameType">
    <annotation>
      <documentation xml:lang="en">
        Used in a calendar query to specify a property to be returned.
      </documentation>
    </annotation>
  </complexType>
  
  <element name="propname" type="tns:PropnameType" />
   -->
   
  <complexType name="CalendarDataResponseType">
    <annotation>
      <documentation xml:lang="en">
           Calendar data returned as response
      </documentation>
    </annotation>
    <sequence>
      <choice>
        <element name="text" type="string" />
        <element ref="xcal:icalendar" />
      </choice>
    </sequence>
    
    <attribute name="content-type" type="string" default="application/xml+calendar" />
    <attribute name="version" type="string" default="2.0" />
  </complexType>
   
  <complexType name="MultistatusPropElementType">
    <annotation>
      <documentation xml:lang="en">
           prop element type in propstat
      </documentation>
    </annotation>
    <sequence>
      <choice>
        <element name="calendar-data" type="tns:CalendarDataResponseType" />
      </choice>
    </sequence>
  </complexType>
  
  <complexType name="PropstatType">
    <annotation>
      <documentation xml:lang="en">
           Contains prop elements with the same status
      </documentation>
    </annotation>
    <sequence>
      <element name="prop" type="tns:MultistatusPropElementType"
               minOccurs="0" maxOccurs="unbounded" />
      <element name="status" type="string" />
    </sequence>
  </complexType>
  
  <element name="propstat" type="tns:PropstatType" />

  <complexType name="MultistatResponseElementType">
    <annotation>
      <documentation xml:lang="en">
           One part of a Multistatus
      </documentation>
    </annotation>
    <sequence>
      <element name="href" type="string" />
      <element name="etag" type="string" />
      <element ref="tns:propstat" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
   
  <complexType name="MultistatusType">
    <annotation>
      <documentation xml:lang="en">
           Contains multiple MultistatResponseElementType
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseResponseType">
        <sequence>
          <element name="response" type="tns:MultistatResponseElementType" 
                   minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="CalendarQueryOrMultigetBaseType">
    <annotation>
      <documentation xml:lang="en">
           Base type for query or multiget.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType">
        <sequence>
          <choice minOccurs="0">
            <element ref="tns:allprop" />
            <element ref="xcal:icalendar" />
          </choice>
          <choice minOccurs="0">
            <element name="expand" type="cdav:ExpandType" />
            <element name="limitRecurrenceSet" type="cdav:LimitRecurrenceSetType" />
          </choice>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="CalendarQueryType">
    <annotation>
      <documentation xml:lang="en">
           Message to query a calendar.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:CalendarQueryOrMultigetBaseType">
        <sequence>
          <element ref="tns:depth" />
          <element ref="cdav:filter" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="calendarQuery" type="tns:CalendarQueryType" />
  
  <complexType name="CalendarQueryResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to a calendar query or multiget.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:MultistatusType">
      </extension>
    </complexContent>
  </complexType>
  
  <element name="calendarQueryResponse" type="tns:CalendarQueryResponseType" />

  <!-- ====================== calendarMultiget ============================= -->

  <complexType name="ArrayOfHrefs">
    <sequence>
      <element name="href" type="string" maxOccurs="unbounded" />
    </sequence>
  </complexType>
  
  <complexType name="CalendarMultigetType">
    <annotation>
      <documentation xml:lang="en">
           Message to fetch multiple calendar entities.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:CalendarQueryOrMultigetBaseType">
        <sequence>
          <element name="hrefs" type="tns:ArrayOfHrefs" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="calendarMultiget" type="tns:CalendarMultigetType" />

  <!-- 
         <!ELEMENT calendar-query ((DAV:allprop |
                                    DAV:propname |
                                    DAV:prop)?, filter, timezone?, timezone-id?)>
   -->

  <!-- ========================== addItem ============================== -->
  
  <complexType name="AddItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to create a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType">
        <sequence>
          <element ref="xcal:icalendar" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="addItem" type="tns:AddItemType" />
  
  <complexType name="AddItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to add an item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseResponseType">
        <sequence>
          <element name="href" type="string" minOccurs="0" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="addItemResponse" type="tns:AddItemResponseType" />

  <!-- ============================ fetchItem ============================== -->
  
  <complexType name="FetchItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to fetch a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType"/>
    </complexContent>
  </complexType>
  
  <element name="fetchItem" type="tns:FetchItemType" />
  
  <complexType name="FetchItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to fetch an item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseResponseType">
        <sequence>
          <element ref="xcal:icalendar" minOccurs="0" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="fetchItemResponse" type="tns:FetchItemResponseType" />

  <!-- ============================ deleteItem ============================== -->
  
  <complexType name="DeleteItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to delete a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType"/>
    </complexContent>
  </complexType>
  
  <element name="deleteItem" type="tns:DeleteItemType" />
  
  <complexType name="DeleteItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to delete an item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseResponseType" />
    </complexContent>
  </complexType>
  
  <element name="deleteItemResponse" type="tns:DeleteItemResponseType" />

  <!-- ========================== update-item ============================== -->
  <!-- This is a simplified form of the XML patch operations defined in RFC 5261 
    modified for xcalendar updates.
    
    As this is intended for use in a SOAP environment the any for the new or
    replacement value is going to be a problem. However, for icalendar patching we 
    can restrict the value to be an icalendar element.
    
    We select the outer vcalendar if we wish to add a component
  
    We select a component if we wish to add a property or a component to that 
    component or if we wish to delete that component 
  
    We select a property to change it's parameters or it's value or delete it. The 
    value can be a parameter to add, a new value for the property or nothing to delete
    
    We select a parameter to delete it or change its value. The value is a value-type
    element
    
    RFC5261 allows the specification of an insertion point for new items.
    All new items here are appended to the children of the targeted parent.
  -->

  <simpleType name="XpathType">
    <restriction base="string">
      <pattern
             value="(/)?((&id;)((/&step;)*(/&last;))?|(&step;/)*(&last;))"/>
    </restriction>
  </simpleType>
  
  <simpleType name="XpathAddType">
    <restriction base="string">
      <pattern
             value="(/)?((&id;)((/&step;)*(/&child;))?|(&step;/)*(&child;))"/>
    </restriction>
  </simpleType>
  
  <simpleType name="AddValueType">
    <restriction base="string">
      <pattern value="&aname;|&nspa;"/>
    </restriction>
  </simpleType>
  
  <complexType name="BaseUpdateType" abstract="true">
    <attribute name="sel" type="tns:XpathAddType"
                  use="required"/>
  </complexType>
  
  <complexType name="NewValueType" abstract="true">
    <complexContent mixed="false">
      <extension base="tns:BaseUpdateType">
        <choice> 
          <element ref="xcal:baseComponent"/>
          <element ref="xcal:baseProperty"/>
          <element ref="xcal:baseParameter"/>
         </choice>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="AddType">
    <complexContent mixed="false">
      <extension base="tns:NewValueType">
        <attribute name="type" type="tns:AddValueType"/>
     </extension>
    </complexContent>
  </complexType>
  
  <complexType name="ReplaceType">
    <annotation>
      <documentation xml:lang="en">
           This completely replaces the targeted element with the supplied new
           element. 
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:NewValueType">
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="RemoveType">
    <complexContent mixed="false">
      <extension base="tns:BaseUpdateType" />
    </complexContent>
  </complexType>
  
  <element name="baseUpdate" type="tns:BaseUpdateType" />
  
  <complexType name="ArrayOfUpdates">
    <sequence>
      <element ref="tns:baseUpdate" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <element name="add" type="tns:AddType"
           substitutionGroup="tns:baseUpdate"/>

  <element name="replace" type="tns:ReplaceType"
           substitutionGroup="tns:baseUpdate"/>

  <element name="remove" type="tns:RemoveType"
           substitutionGroup="tns:baseUpdate"/>
  
  <complexType name="NamespaceType">
    <attribute name="prefix" type="string"/>
    <attribute name="uri" type="string"
               use="required"/>
  </complexType>
  
  <complexType name="ArrayOfNamespaces">
    <sequence>
      <element name="namespace" type="tns:NamespaceType" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <complexType name="UpdateItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to update a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseRequestType">
        <sequence>
          <element name="namespaces" type="tns:ArrayOfNamespaces" />
          <element name="updates" type="tns:ArrayOfUpdates" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="updateItem" type="tns:UpdateItemType" />

  <complexType name="UpdateItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to update an item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseResponseType">
      </extension>
    </complexContent>
  </complexType> 

  <element name="updateItemResponse" type="tns:UpdateItemResponseType" />
</schema>
