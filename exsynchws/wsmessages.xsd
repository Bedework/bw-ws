<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE schema [
  <!ENTITY ncname "\i\c*">
  <!ENTITY qname  "(&ncname;:)?&ncname;">
  <!ENTITY aname  "@&qname;">
  <!ENTITY pos    "\[\d+\]">
  <!ENTITY attr   "\[&aname;='(.)*'\]|\[&aname;=&quot;(.)*&quot;\]">
  <!ENTITY valueq "\[(&qname;|\.)=&quot;(.)*&quot;\]">
  <!ENTITY value  "\[(&qname;|\.)='(.)*'\]|&valueq;">
  <!ENTITY cond   "&attr;|&value;|&pos;">
  <!ENTITY step   "(&qname;|\*)(&cond;)*">
  <!ENTITY piq    "processing-instruction\((&quot;&ncname;&quot;)\)">
  <!ENTITY pi     "processing-instruction\(('&ncname;')?\)|&piq;">
  <!ENTITY id     "id\(('&ncname;')?\)|id\((&quot;&ncname;&quot;)?\)">
  <!ENTITY com    "comment\(\)">
  <!ENTITY text   "text\(\)">
  <!ENTITY nspa   "namespace::&ncname;">
  <!ENTITY cnodes "(&text;(&pos;)?)|(&com;(&pos;)?)|((&pi;)(&pos;)?)">
  <!ENTITY child  "&cnodes;|&step;">
  <!ENTITY last   "(&child;|&aname;|&nspa;)">
 ]> 
<schema xmlns="http://www.w3.org/2001/XMLSchema" 
        xmlns:tns="http://www.bedework.org/exsynch/wsmessages" 
        xmlns:xcal="urn:ietf:params:xml:ns:icalendar-2.0"
        xmlns:xrd="http://docs.oasis-open.org/ns/xri/xrd-1.0"
        targetNamespace="http://www.bedework.org/exsynch/wsmessages" 
        elementFormDefault="qualified">
        
  <import schemaLocation="../schemas/icalendar/iCalendar.xsd" 
          namespace="urn:ietf:params:xml:ns:icalendar-2.0" />
        
  <import schemaLocation="../schemas/xrd/xrd-1.0-os.xsd" 
          namespace="http://docs.oasis-open.org/ns/xri/xrd-1.0" />

  <!-- Schema for messages passed from exsynch processor to the remote service. -->
  
  <simpleType name="SynchType">
    <annotation>
      <documentation xml:lang="en">
           from... synch from that end
           both  both ways - server tries to resolve conflicts
           both...Master - Named service wins in conflicts.
      </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="fromExchange" />
      <enumeration value="toExchange" />
      <enumeration value="both" />
      <enumeration value="bothExchangeMaster" />
      <enumeration value="bothRemoteMaster" />
    </restriction>
  </simpleType>
  
  <simpleType name="StatusType">
    <restriction base="string">
      <enumeration value="OK" />
      <enumeration value="Already subscribed" />
      <enumeration value="Unknown Exchange calendar" />
      <enumeration value="Invalid token" />
      <enumeration value="Unknown subscription" />
      <enumeration value="No Access" />
      <enumeration value="Service Stopped" />
      <enumeration value="Error" />
    </restriction>
  </simpleType>
  
  <complexType name="BaseSynchRequestType">
    <annotation>
      <documentation xml:lang="en">
           Requests have this as the base type.
      </documentation>
    </annotation>
    <sequence>
      <element name="calendar-href" type="string" />
      <element name="principal-href" type="string" />
      <element name="synch-token" type="string" />
    </sequence>
  </complexType>
  
  <complexType name="BaseSynchEntityRequestType">
    <annotation>
      <documentation xml:lang="en">
           Message from remote service identifying an entity by it's UID and
           optionally its recurrenceid.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType">
        <sequence >
          <element name="uid" type="string" />
          <element name="recurrence-id" type="string" minOccurs="0" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="BaseSynchResponseType">
    <annotation>
      <documentation xml:lang="en">
           Responses have this as the base type.
      </documentation>
    </annotation>
    <sequence>
      <element name="subscribe-status" type="tns:StatusType" />
    </sequence>
  </complexType>
  
  <!-- *********************************************************************
       Remote system to syncher
       subscribe: set up a new subscription for a principal to a calendar
       unsubscribe: remove a new subscription for a principal to a calendar
       ********************************************************************* -->
  
  <complexType name="SubscribeRequestType">
    <annotation>
      <documentation xml:lang="en">
           Message from remote service requesting new subscription.
           token
                 Sent in initial startup request
           principal-href
                 Principal requesting the subscription.
           synch-token
                 Passed back for operations on the calendar
           exchange-user
                 Userid for exchange
           exchange-encpw
                 Encoded password for exchange
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType">
        <sequence >
          <element name="token" type="string" />
          <element name="exchange-folder-id" type="string" />
          <element name="exchange-uri" type="string" />
          <element name="synch-type" type="tns:SynchType" />
          <element name="exchange-user" type="string" />
          <element name="exchange-encpw" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="subscribe" type="tns:SubscribeRequestType" />
  
  <complexType name="SubscribeResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message from remote service requesting new subscription.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchResponseType">
        <sequence >
          <element name="subscription-id" type="string" />
          <element minOccurs="0" name="message" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="subscribe-response" type="tns:SubscribeResponseType" />
  
  <complexType name="UnsubscribeRequestType">
    <annotation>
      <documentation xml:lang="en">
           Message from remote service unsubscribing.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType">
        <sequence >
          <element name="subscription-id" type="string" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>

  <element name="unsubscribe" type="tns:UnsubscribeRequestType" />
  
  <complexType name="UnsubscribeResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message from remote service requesting unsubscription.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchResponseType">
      </extension>
    </complexContent>
  </complexType>

  <element name="unsubscribe-response" type="tns:UnsubscribeResponseType" />
  
  <!-- *********************************************************************
       Syncher to Remote system 
       start-service-notification; sent to (re)initialise the service
       get-sycnch-info: return info used to synch
       fetch: fetch one or more calendar items
       add: add a new calendar item
       update: update a calendar item
       delete: delete a calendar item
       ********************************************************************* -->
  
  <complexType name="StartServiceNotificationType">
    <annotation>
      <documentation xml:lang="en">
           (Re)initialize the service
           subscribe-url: callback url for notifications and subscribe requests
           token: random token for subscribe requests. If token is unchanged this
               is just a keep alive ping
      </documentation>
    </annotation>
    <sequence>
      <element name="subscribe-url" type="string" />
      <element name="token" type="string" />
    </sequence>
  </complexType>
  
  <element name="start-service-notification" 
           type="tns:StartServiceNotificationType" />
  
  <complexType name="StartServiceResponseType">
    <annotation>
      <documentation xml:lang="en">
           Respond to the ping
           token: sent in initial request
           status: OK
      </documentation>
    </annotation>
    <sequence>
      <element name="token" type="string" />
      <element name="status" type="tns:StatusType" />
    </sequence>
  </complexType>

  <element name="start-service-response" type="tns:StartServiceResponseType" />

  <!-- ========================== get-properties =========================== -->
  
  <complexType name="GetPropertiesType">
    <annotation>
      <documentation xml:lang="en">
           Fetch the XRD object for the targeted resource. The target may be
           the system itself, a principal, a collection resource or an entity.
      </documentation>
    </annotation>
    <sequence>
      <choice>
        <element name="system"> <!-- Empty element -->
          <complexType/>
        </element>

        <element name="calendar-href" type="string" />
        <element name="principal-href" type="string" />
      </choice>
    </sequence>
  </complexType>
  
  <element name="get-properties" 
           type="tns:GetPropertiesType" />
  
  <complexType name="GetPropertiesResponseType">
    <annotation>
      <documentation xml:lang="en">
           Respond to the ping
           token: sent in initial request
           status: OK
      </documentation>
    </annotation>
    <sequence>
      <element ref="xrd:XRD" />
    </sequence>
  </complexType>

  <element name="get-properties-response" type="tns:GetPropertiesResponseType" />

  <!-- ============================ synch-info ============================= -->
  
  <complexType name="GetSynchInfoType">
    <annotation>
      <documentation xml:lang="en">
           Message to remote service requesting synchronization info.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchRequestType"/>
    </complexContent>
  </complexType>
  
  <element name="get-sycnch-info" type="tns:GetSynchInfoType" />
  
  <complexType name="SynchInfoType">
    <sequence>
      <element name="uid" type="string" />
      <element name="exchange-lastmod" type="string" />
    </sequence>
  </complexType>
  
  <complexType name="SynchInfoResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to remote service requesting synchronization info.
      </documentation>
    </annotation>
    <sequence>
      <element name="calendar-href" type="string" />
      <element name="synch-info-responses">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" name="synch-info" 
                     type="tns:SynchInfoType" />
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>
  
  <element name="synch-info-response" type="tns:SynchInfoResponseType" />

  <!-- ============================ add-item =============================== -->
  
  <complexType name="AddItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to add a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchEntityRequestType">
        <sequence>
          <element ref="xcal:icalendar" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="add-item" type="tns:AddItemType" />
  
  <complexType name="AddItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to add an item.
      </documentation>
    </annotation>
    <sequence>
      <element name="status" type="tns:StatusType" />
      <element name="message" type="string" />
    </sequence>
  </complexType>
  
  <element name="add-item-response" type="tns:AddItemResponseType" />

  <!-- ============================ add-item =============================== -->
  
  <complexType name="FetchItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to fetch a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchEntityRequestType"/>
    </complexContent>
  </complexType>
  
  <element name="fetch-item" type="tns:FetchItemType" />
  
  <complexType name="FetchItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to fetch an item.
      </documentation>
    </annotation>
    <sequence>
      <element ref="xcal:icalendar" />
      <element name="status" type="tns:StatusType" />
      <element name="message" type="string" />
    </sequence>
  </complexType>
  
  <element name="fetch-item-response" type="tns:FetchItemResponseType" />

  <!-- ========================== update-item ============================== -->
  <!-- This is a simplified form of the XML patch operations defined in RFC 5261 
    modified for xcalendar updates.
    
    As this is intended for use in a SOAP environment the xs:any for the new or
    replacement value is going to be a problem. However, for icalendar patching we 
    can restrict the value to be an icalendar element.
    
    We select the outer vcalendar if we wish to add a component
  
    We select a component if we wish to add a property or a component to that 
    component or if we wish to delete that component 
  
    We select a property to change it's parameters or it's value or delete it. The 
    value can be a parameter to add, a new value for the property or nothing to delete
    
    We select a parameter to delete it or change its value. The value is a value-type
    element
    
    RFC5261 allows the specification of an insertion point for new items.
    All new items here are appended to the children of the targeted parent.
  -->

  <simpleType name="XpathType">
    <restriction base="string">
      <pattern
             value="(/)?((&id;)((/&step;)*(/&last;))?|(&step;/)*(&last;))"/>
    </restriction>
  </simpleType>
  
  <simpleType name="XpathAddType">
    <restriction base="string">
      <pattern
             value="(/)?((&id;)((/&step;)*(/&child;))?|(&step;/)*(&child;))"/>
    </restriction>
  </simpleType>
  
  <simpleType name="AddValueType">
    <restriction base="string">
      <pattern value="&aname;|&nspa;"/>
    </restriction>
  </simpleType>
  
  <complexType name="BaseUpdateType" abstract="true">
    <attribute name="sel" type="tns:XpathAddType"
                  use="required"/>
  </complexType>
  
  <complexType name="NewValueType" abstract="true">
    <complexContent mixed="false">
      <extension base="tns:BaseUpdateType">
        <choice> 
          <element ref="xcal:baseComponent"/>
          <element ref="xcal:baseProperty"/>
          <element ref="xcal:baseParameter"/>
         </choice>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="AddType">
    <complexContent mixed="false">
      <extension base="tns:NewValueType">
        <attribute name="type" type="tns:AddValueType"/>
     </extension>
    </complexContent>
  </complexType>
  
  <complexType name="ReplaceType">
    <complexContent mixed="false">
      <extension base="tns:NewValueType">
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="RemoveType">
    <complexContent mixed="false">
      <extension base="tns:BaseUpdateType" />
    </complexContent>
  </complexType>
  
  <element name="baseUpdate" type="tns:BaseUpdateType" />
  
  <complexType name="ArrayOfUpdates">
    <sequence>
      <element ref="tns:baseUpdate" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <element name="add" type="tns:AddType"
           substitutionGroup="tns:baseUpdate"/>

  <element name="replace" type="tns:ReplaceType"
           substitutionGroup="tns:baseUpdate"/>

  <element name="remove" type="tns:RemoveType"
           substitutionGroup="tns:baseUpdate"/>
  
  <complexType name="NamespaceType">
    <attribute name="prefix" type="string"/>
    <attribute name="uri" type="string"
               use="required"/>
  </complexType>
  
  <complexType name="ArrayOfNamespaces">
    <sequence>
      <element name="namespace" type="tns:NamespaceType" maxOccurs="unbounded"/>
    </sequence>
  </complexType>

  <complexType name="UpdateItemType">
    <annotation>
      <documentation xml:lang="en">
           Message to update a calendar item.
      </documentation>
    </annotation>
    <complexContent mixed="false">
      <extension base="tns:BaseSynchEntityRequestType">
        <sequence>
          <element name="namespaces" type="tns:ArrayOfNamespaces" />
          <element name="updates" type="tns:ArrayOfUpdates" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <element name="update-item" type="tns:UpdateItemType" />
  
  <complexType name="UpdateItemResponseType">
    <annotation>
      <documentation xml:lang="en">
           Response to message to update an item.
      </documentation>
    </annotation>
    <sequence>
      <element name="status" type="tns:StatusType" />
      <element name="message" type="string" />
    </sequence>
  </complexType>
  
  <element name="update-item-response" type="tns:UpdateItemResponseType" />
</schema>
